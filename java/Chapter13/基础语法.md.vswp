vnote_backup_file_826537664 D:/A_Zero/document/java/Chapter13/基础语法.md
# 第1节：基础语法

# 模版语法

## 插值

#### 变与不变
在VUE实例的文档中出现了freeze函数 导致被修饰的变量无法被响应式的修改
```
<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<title></title>
		<script src="vue.js" type="text/javascript" charset="UTF-8"></script>
	</head>
	<body>
		<div id="test1">
			{{foo}}
		</div>
		
		<script type="text/javascript">
			var obj = {
				foo:'bar'
			}
			
			Object.freeze(obj);
			
			new Vue({
				el:'#test1',
				data:obj
			});
			
			obj.foo = 'yuyu';
		</script>
	</body>
</html>
```
即使后面将该变量值改写了yuyu但是在运行的时候依旧是用原来的值

在插值语法这一节中出现了 v-once指令 如果该标签被该指令修饰 则无法再对该值进行响应式改变
```
<div id="test2" v-once>
	{{foo2}}
</div>
new Vue({
	el:'#test2',
	data:obj2
});
			
obj2.foo2 = "ning";
```

#### 原始HTML与双括号传值（Mustache）
Mustache会将数据解释为普通的文本，而不是HTML的代码。
如果真的要输出HTML 的代码需要使用v-html 以下示例
```
<div id="test3">
	<p>{{rawHtml}}</p>
	<p>v-html:<span v-html="rawHtml"></span></p>
</div>

new Vue({
	el:'#test3',
	data:{
		rawHtml:'<span style="color:red">111</span>'
	}
});
```

#### v-bind何时使用
Mustache语法不能作用于HTML的attribute上，遇到这种情况应该使用v-bind指令
关于HTML中节点的属性中 布尔变量的认识：
存在即true，如果使用v-bind进行值的绑定和动态更改，当值为null\undefind\false的时候
该布尔属性都不会出现在渲染完成的页面的节点的属性中、

## 指令

v-开头的特殊attribute

## 缩写
```
<a v-bind:herf="">...</a>
<a :herf="">...</a>
```
```
<a v-on:click="doSomething">...</a>
<a @click="doSomething">...</a>
```

# 计算属性和侦听器

## 计算属性

## 侦听器

计算属性与侦听器跟方法的区别：
计算属性：有缓存
方法：每一次都重新执行
侦听器：可以异步或者开销较大的操作

# class与style的绑定


